// <auto-generated />
using System;
using CarCare.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarCare.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(CarCareDbContext))]
    [Migration("20200720165447_Initial DB relations")]
    partial class InitialDBrelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarCare.Core.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ChassisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.HasIndex("CarOwnerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarCare.Core.Models.CarMaintaince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("KM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarMaintainces");
                });

            modelBuilder.Entity("CarCare.Core.Models.CarMaintainceAndCategory", b =>
                {
                    b.Property<int>("CarMaintainceId")
                        .HasColumnType("int");

                    b.Property<int>("MaintainceCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaintainceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintainceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaintainceKM")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextMaintainceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NextMiantainceKM")
                        .HasColumnType("int");

                    b.HasKey("CarMaintainceId", "MaintainceCategoryId");

                    b.HasIndex("MaintainceCategoryId");

                    b.ToTable("MaintainceAndCategories");
                });

            modelBuilder.Entity("CarCare.Core.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("CarCare.Core.Models.CarOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarOwners");
                });

            modelBuilder.Entity("CarCare.Core.Models.MaintainceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaintainceCategories");
                });

            modelBuilder.Entity("CarCare.Core.Models.MaintainceSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaintainceCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaintainceCategoryId");

                    b.ToTable("MaintainceSubCategories");
                });

            modelBuilder.Entity("CarCare.Core.Models.Car", b =>
                {
                    b.HasOne("CarCare.Core.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCare.Core.Models.CarOwner", "CarOwner")
                        .WithMany()
                        .HasForeignKey("CarOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCare.Core.Models.CarMaintaince", b =>
                {
                    b.HasOne("CarCare.Core.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCare.Core.Models.CarMaintainceAndCategory", b =>
                {
                    b.HasOne("CarCare.Core.Models.CarMaintaince", "CarMaintaince")
                        .WithMany("MaintainceAndCategories")
                        .HasForeignKey("CarMaintainceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCare.Core.Models.MaintainceCategory", "MaintainceCategory")
                        .WithMany("MaintainceAndCategories")
                        .HasForeignKey("MaintainceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCare.Core.Models.MaintainceSubCategory", b =>
                {
                    b.HasOne("CarCare.Core.Models.MaintainceCategory", "MaintainceCategory")
                        .WithMany("MaintainceSubCategories")
                        .HasForeignKey("MaintainceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
